# This properties file is used to store the custom properties associated with the
# "Sage FTP File Monitor App" Java application. If a "common" properties file is also used by this instance
# of the application, then a link tag can be used for each property that is stored in the common properties
# file. Use "[[file:common.properties]]" as the property value to link to a different file. To encrypt a 
# value, use the standard secret key (locked up in iStation) to encrypt the value and then add the value 
# into this property file or a linked property file with "[[encrypted:12345678900987654321]]" 

#======= Local Log File Configuration (frequency = n/a, daily or monthly) =====================
appLogToFile=true
appLogFile=logs/log.txt
appLogNewFileFrequency=daily
appLogMaxTextLength=50000
#=============================================================================================

#======== JDBC Database Configuration =========================================================
#-- JDBC Driver class
dbConnectClass=com.ibm.db2.jcc.DB2Driver
#-- Connection URL, UID and Pwd for File Cataloger Database
dbConnectionURL=jdbc:db2://localhost:50001/sage_sbx
dbUserID=DAS_USER1
dbPassword=[[file:common.properties]]
#-- Connection URL, UID and Pwd for Auto_Emailer Database
dbConnectionURL2=jdbc:db2://b01acirdb083.ahe.pok.ibm.com:3700/sagev2db
dbUserID2=sageauto
dbPassword2=[[file:common.properties]]
#-- JDBC SQL Query Timeout value (in seconds)
dbSQLTimeout=120
#-- Database Date qualifier, DATETIME/TIMESTAMP , DATE, and TIME formats (if needed)
dbDateQualifier='
dbFormat_DateTime=yyyy-MM-dd HH:mm:ss.S
dbFormat_Date=yyyy-MM-dd
dbFormat_Time=HH:mm:ss
#-- Database Query Used to Determine the version of database server for Logging 
dbVersionQuery=[[file:common.properties]]
#-- JDBC Database Insert SQL Error Codes to Ignore (separate each by a comma)
#   Example:  SQLCODE=-803,SQLCODE=-999   (such as insert errors due to duplicate key from overlapping threads)
dbSQLErrorCodesToIgnore=SQLCODE=-803
#=============================================================================================


#----- Fully qualified location of the directory name where log files for FTP File Cataloger App are located
ftpFileCataloger_alertFile=../Sage FTP File Cataloger App/logs/appalerts.txt

#----- SQL for inserting a Notification record into NOTIFICATION_OUTGOING table for processing by autoemailer
sqlInsertIntoDB_AutoEmailer=INSERT INTO "SAGE2ADM"."NOTIFICATION_OUTGOING" ("NOTIFICATION_OUTGOING_ROWID","SOURCEAPPLICATION","SUBJECT","BODY","SENDTO","ERRORRETRYEXPIRATIONDATETIME") VALUES \
([[Notification_Outgoing_RowID]], [[SOURCE_APPLICATION]],[[SUBJECT]],[[BODY]],[[SENDTO]],[[ErrRetryExpDT]])

# ---- List of users to be notified for exception events. This is the default if no recipients are explicitly provided in the DB record (comma separated email addresses)
exceptionEventRecipients_Default=yogigol@us.ibm.com

#----- SQL used to retrieve all business rule records from the business rules table ------
sqlSelectBusinessRuleData=\
SELECT "BusinessRule_ID","FileNamePattern","FileNameMode","Frequency","PlannedDay","PlannedTime","ThresholdDay","ThresholdTime","MaxAlerts","AlertCount","AlertSent","sendTo","Status","AlertInterval","LastAlertDate" FROM "SAGE"."BusinessRule_Index2"

#----- Column number mapping of the business rule column names
businessRuleIndexID_ColNum=1
fileName_Pattern_ColNum=2
fileNameMode_ColNum=3
fileFrequency_ColNum=4
plannedDay_ColNum=5
plannedTime_ColNum=6
thresholdDay_ColNum=7
thresholdTime_ColNum=8
maxAlerts_ColNum=9
alertCount_ColNum=10
alertSent_ColNum=11
sendTo_ColNum=12
status_ColNum=13
alertInterval_ColNum=14
lastAlertDate_ColNum=15

#-- SQL for selecting records from the File Catalog Table based on exact file name match
sqlSelectByFileName=\
SELECT "FileName","Create_Date","LastMod_Date" FROM  "SAGE"."FTP_File_Catalog" WHERE "FileName"=[[FileName_Pattern]] AND "Status" != 'Deleted' ORDER BY "LastMod_Date" DESC

#-- SQL for selecting records from the File Catalog Table based on file name pattern match
sqlSelectByFilePattern=\
SELECT "FileName","Create_Date","LastMod_Date" FROM  "SAGE"."FTP_File_Catalog" WHERE "FileName" LIKE [[FileName_Pattern]] AND "Status" != 'Deleted' ORDER BY "LastMod_Date" DESC

#-- Column Number of the last mod date column and CreateDate column (in SQLSelectByFileName / SQLSelectByFilePattern SQL statement)
lastMod_Date_ColNum=3
createDate_ColNum=2
fileName_ColNum=1

#-- SQL for updating Business Rule Index row with Notification Alert Flags
sqlUpdateBusinessRuleIndex=UPDATE "SAGE"."BusinessRule_Index2" SET "AlertCount"=[[alertCount]],"AlertSent"=[[alertSent]],"LastAlertDate"=[[lastAlertDate]] WHERE "BusinessRule_ID"=[[businessRule_Id]]

#-- Message Template for an alert message sent when a file has not been created/updated after the due date/time
alertMsgTemplate=ALERT MSG\nA file by the name of [[FileName]] is overdue. \nMost recent version of file date: [[CreateDate]] \nExpected Date was [[PlannedDate]]. \nLatest Due date was [[ThresholdDate]]
#-- Message Template for an alert message sent when a file WAS created/updated but not until after the due date/time (Warning Message)
warningMsgTemplate=WARNING MSG:\nA file by the name of [[FileName]] is created/updated after the defined due date. \nMost recent version of file date: [[CreateDate]] \nExpected Date was [[PlannedDate]]. \nLatest Due date was [[ThresholdDate]]


#-- Table Field Name that contains the LastModified Date of a File
dateModifiedFieldName=LastMod_Date

#-- SQL for inserting Db Activity records into the FTP_File_Activity Table
SqlInsertIntoDB_Activity=INSERT INTO "SAGE"."FTP_File_Activity" ("FileActivityID","Activity_Type","Activity_Description","FileID") VALUES \
([[ActivityID]], [[ActivityType]],[[Description]],[[FileID]])
